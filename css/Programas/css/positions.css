/*-------------------CLASE 37----------------------POSICIONAMIENTO*/

/*
Las propiedades float y position nos permiten modificar la posicion natural de cualquier elemento del html

el navegador coloca cada elemento teniendo en cuenta el orden en el que aparece ne el documento y su tipo de visualizacion dependiendo si es un elemento de linea o de bloque. 

Con float y position podemos modificar este comportamiento 

elementos flotantes

float: convierte un elemento en flotante desplazandolo hasta la zona mas a la izquierda o mas a la derecha de la posicion en la que originalmente se encontraba. 

clear: limpia la flotacion (left, right, both)

tipos de posicionamiento:

static(default)
relative
absolute
fixed
sticky

para mover los elementos posicionados se activan las propiedades

top(vertical -eje Y)
bottom(vertical - eje Y)
left (horizontal - ejeX)
right(horizontal - ejeX)  
z-index (profundidad -ejeZ)

las propiedades top y left van a tener preferencia sobre bottom y right respectivamente

estas 5 propiedades no funcionan con el valor static
*/


/*-------------------CLASE 38----------------------Static*/

/*
    static: es el valor por defecto, significa que el elemento respecta el flujo del documento html, por lo que no se puede mover ni posicionar
*/

.static
{
    background-color: yellow;
    position: static; /*Este lo trae por defecto todas las etiquetas*/

    /*Su qyuero mover la caja con
    
    top:10px
    left:10px
    
    no se mueve... porque es estatico
    
    */
}

/*-------------------CLASE 39----------------------relativo*/

/*Relative: el elemento conserva sus dimensiones y posicion original en el flujo del documento. Si se mueve toma como referencia su posicion original*/
/*Pero OJO, QUE SE MUEVA de su posicion original tambien incluye que este pueda superponerse a otros objetos que esten justo debajo de el*/
/*Ademas, OJO que el espacio que ocupa en su posicion original (si se cambia su tama√±o) tambien se guarda... ver que el contenido que lo continua no ocupa su espacio por mas que la caja relativa se mueva a la mierda*/
.relative
{
    background-color: turquoise;
    position: relative;

    width: 100px;
    height: 100px;

    top:90px;/*del margen de antes tomar 50 hacia abajo empujandome con top*/
    left:50px;/*del margen de antes tomar 50 hacia la derecha, empujandome con left*/

    /*
    si pusiera esto en vez de lo otro lo hago subir desde la posicion original y lo empujo tambien hacia la izquierda... 
    bottom:50px;
    right:50px;

    tener en cuenta que tambien se pueden usar valores negativos
    */
}

.text-red{
    color: red;
}

/*-------------------CLASE 39----------------------absoluto*/

/*Absolute: el elemento pierde sus dimensiones y posicion origianl en el flujo del documento. Si se mueve puede tomar como referencia 2 elementos::after

1-El primer ancestro con posicionamiento relativo
2- Si no encuentra un ancestro relativo, se mueve respecto del documento HTML*/

.absolute{
    background-color: tomato;
    position: absolute;
    width: 200px;
    height: 50px;
    /* top: 0;
    left: 0; */
}

.relative-parent{
    background-color: khaki;
    position: relative;
    width: 600px;
    height: 50px;
    
}

/*El padre tiene relative, al tenerlo entonces puedo moverme dependiendo de la posicion del padre*/
.absolute-child{
    background-color: lightcoral;
    position: absolute;
    top: 0;
    left: 0;
    /* bottom: 0;
    right: 0; */
    /* top: -50px;
    left: -30px; */
}

/*-------------------CLASE 41----------------------position fix*/

/*Fixed: el elemento pierde sus dimensiones y posicion original en el flujo del documento. Si se mueve toma como referencia el documento HTML y uqeda fijo en la posicion, cuando el scroll se mueva, el elemento no lo hara, queda FIJO*/

/*Es muy comun verlo en barras de navegacion que se quedan totalemnte estaticas*/

.fixed{
    background-color: lightblue;
    position: fixed;
    width: 300px;
    height: 100px;
    /*
    right:20px
    bottom: 10px
    */
    top: 30px;
    left: 500px;
}



/*-------------------CLASE 42----------------------position sticky*/

/*Sticky es una combinacion de posicionamiento relative y fixed, para este posicionamiento las propiedades de top, left, bottom y right no mueven el elemento, sirven como un punto de referencia, mientras no lleguen a ese valor el elemento se comporta como relative, cuando llega se convierte en fixed*/

/*Para que este comportamiento funcione el elemento sticky debe ser hijo directo del body o su elemento contenedor debe tener dimensiones definidas y solo sera sticky dentro de las dimensiones de su contenedor padre*/

/*Imaginar una pagina en donde puedo poner algo como sticky, pero que no descubro que es sticky hasta scrollear hasta la posicion en la que se encuentra... osea... este elemento puede hallarse a mitad de scroll, y una vez que lo muestre scrollenado se va a pegar a mi pantalla mientras siga bajando (scrolleando hacia abajo) PERO cuando vuelva a subir y este elemetno vuelva a tocar su posicion original se quedara ahi, yo puedo seguir scrolleando hacia arriba y este no me seguira, hasta que otra vez, vuelva a a bajar. */

.sticky{
    background-color: lightskyblue;
    position: sticky;
    top: 50px;
}

/*Si dejo de ver el inicio del contenedor... entonces se pega!*/
.sticky-parent{
    border:thin dashed black;
    height: 600px;
}

.sticky-child{
    background-color: lightslategray;
    position: sticky;
    top: 75px;
}


/*-------------------CLASE 43----------------------Z index*/

/*z-index propiedad que permite controlar la profundidad de los elementos posicionados, su valor por defecto es auto, acepta numeros positivos, negativos y cero

A mayor valor el elemento esta mas al frente, a menor valor mas al fondo

Un lemento padre nunca padre estar sobre sus hijos, sin embargo los elementos hijos si peuden dandoles un valor negativo*/

/*Los valores que va tomando z index de forma automatica tienen que ver con el flujo de aparicion de los elemento html*/

.z-index-1,
.z-index-2{
background-color: mediumaquamarine;
border: thin solid black;
position: relative;
width: 200px;
height: 200px;
}

.z-index-1{
z-index: 2;
}

.z-index-2{
top: -200px;
left: 100px;
z-index: 1;
} /*x cascada esta deberia estar arriba, pero por z index la primera!*/

/*En un padre, no FUNCIONA EXACTAMENTE IGUAL*/

.z-index-parent{
    background-color: mediumorchid;
    width: 300px;
    height: 300px;
    position: relative;
    /* z-index: 2; Para que labure bien, el padre no tiene que tener z-index*/
}

.z-index-child{
    background-color: mediumvioletred;
    position: relative;
    width: 150px;
    height: 150px;
    top: -75px;
    left: 75px;
    z-index: -3;
}
